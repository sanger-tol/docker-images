name: Build and Publish

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest  # windows-latest | macos-latest
    name: Test changed-files
    outputs:
      changes: ${{ steps.changed-applications.output.changed-applications }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v20.2
        with:
          files_ignore: |
            *.yml
            *.png
            *.sh
            *.md
            .github/**

      - name: Find changed applications
        id: changed-applications
        run: |
          applications=()
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            applications+=(${file%%/*})
          done
          sorted_applications=($(printf "%s\n" "${applications[@]}" | sort -u))
          echo "${sorted_applications[@]}"
          outputlist=$(printf "\"%s\"," "${sorted_applications[@]}")
          echo $outputlist
          echo "::set-output name=changed-applications::$outputlist"
  
  images:
    runs-on: ubuntu-latest
    name: Test output
    needs: changes
    if: needs.changes.output.changes != '[]'
    strategy:
      fail-fast: false
      matrix:
        tags: ${{ needs.changes.outputs.changes }}
    
    steps:
        - uses: actions/checkout@v2

        - name: test1
          run: echo ${{ matrix.tags }}
